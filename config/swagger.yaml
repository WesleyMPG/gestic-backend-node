swagger: "2.0"
info:
  description: "GestIC App API documentation"
  version: "1.0.0"
  title: "GestIC API"
host: "localhost:3333"
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: x-access-token
tags:
- name: "User"
  description: "Operations related to users"
- name: "File"
  description: "Operations related to file manipulation"
- name: "Project"
  description: "Operations related to active projects"
- name: "Class Offer"
  description: "Operations related to class offers"
- name: "Informatives"
  description: "Operations related to informatives"
paths:
  /access/login:
    post:
      tags:
      - "User"
      summary: "Authentication and authorization of a registered user"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Parameters used in user authentication"
        required: true
        schema:
         type: "object"
         properties:
            email:
              type: "string"
            password:
              type: "string"
      responses:
        "200":
          description: "Successful login. profileTag can be ALUN or MONI or COOR or PROF."
          headers:
            Set-Cookie:
              schema:
                type: "string"
                example: 	"x-access-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA4OTI5NzE4LTU0ZGEtNDVmNy04YTVjLTQ2ZTg
                1ZTFjNzc2YyIsInByb2ZpbGVJZCI6IjIxZjMzOTJkLWZiZGMtNGNiMC04ZTNjLTVhMTFkNmMwNjlmMSIsImlhdCI6MTYxOTA1ODc3NSwiZXhw
                IjoxNjE5MDU5Njc1fQ.OpZp7wcmzolDnIZ12N2FVOQgrIhui6G0Ok6IEitRcUw;
                Expires=Thu, 22 Apr 2021 02:47:55 GMT; Max-Age=900; Path=/; HttpOnly; Domain=localhos"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              profileId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              cpf:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
              status:
                type: "boolean"
              auth:
                type: "boolean"
              profileTag:
                type: "string"
        "500":
          description: "Unsuccessful login"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /access/register:
    post:
      tags:
      - "User"
      summary: "Register a new user"
      description: "Tag can be: ALUN or MONI or PROF or COOR or TEC. Requires the COOR or TEC token for registration to be done."
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Information required for registration"
        required: true
        schema:
          type: "object"
          properties:
            name:
              type: "string"
            email:
              type: "string"
            password:
              type: "string"
      responses:
        "200":
          description: "Successful registration"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              profileId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
              status:
                type: "boolean"
              profileTag:
                type: "string"
                example: "ALUN"
        "500":
          description: "Unsuccessful registration"
          schema:
            type: "object"
            properties:
              message:
                type: "string"

  /access/logout:
    post:
      tags:
      - "User"
      summary: "It does logout"
      description: ""
      produces: "application/json"
      responses:
        "200":
          description: "sucessful logout"
          schema:
            type: "object"
            properties:
              auth:
                type: "boolean"
                example: "false"
  /user:
    put:
      tags:
      - "User"
      summary: "Update user information"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Information required for user update"
        required: true
        schema:
          type: "object"
          properties:
            id:
              type: "string"
              format: "uuid"
            profileId:
                type: "string"
                format: "uuid"
            name:
              type: "string"
            status:
              type: "boolean"
      responses:
        "200":
          description: "Successful update"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              profileId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
              status:
                type: "boolean"
        "500":
          description: "Unsuccessful update"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /user/:id:
    delete:
      tags:
      - "User"
      summary: "Delete user"
      produces:
      - "application/json"
      parameters:
        - in: "param"
          name: "id"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful delete"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              profileId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
              status:
                type: "boolean"
        "500":
          description: "Unsuccessful delete"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /user/:status?:
    get:
      tags:
      - "User"
      summary: "Get users with optional status parameter"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: status
          required: false
          type: boolean
      responses:
        "200":
          description: "Returned the list of users with optional status filter"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  format: "uuid"
                profileId:
                  type: "string"
                  format: "uuid"
                name:
                  type: "string"
                email:
                  type: "string"
                password:
                  type: "string"
                status:
                  type: "boolean"
                  example: false
        "500":
          description: "Could not return a list of users with optional status filter"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /file:
    post:
      tags:
      - "File"
      summary: "Upload a file"
      produces:
      - "application/json"
      consumes:
      - "multipart/form-data"
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: name
          type: string
          required: true
          description: File name.
        - in: formData
          name: tag
          type: string
          required: true
          description: File tag.
      responses:
        "200":
          description: "Successful upload"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              tag:
                type: "string"
              ref:
                type: "string"
        "500":
          description: "Unsuccessful upload"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    get:
      tags:
      - "File"
      summary: "Returns list of file references"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: body
          name: body
          required: false
          schema:
            type: "object"
            properties:
              tag:
                type: "string"
      responses:
        "200":
          description: "Successfully displayed all file references"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  format: "uuid"
                tag:
                  type: "string"
                name:
                  type: "string"
                ref:
                  type: "string"
        "500":
          description: "Could not display all file references"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /file/download:
    get:
      tags:
      - "File"
      summary: "Download a file"
      produces:
      - "application/pdf"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              ref:
                type: "string"
      responses:
        "200":
          description: "Successful download"
          schema:
            type: "file"
            produces: "application/pdf"
            example: "file.pdf"
        "500":
          description: "Unsuccessful download"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /project:
    get:
      tags:
      - "Project"
      summary: "Get a list of all active projects"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Obtained a list of all active projects"
          schema:
            type: "array"
            produces: "application/json"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  format: "uuid"
                userId:
                  type: "string"
                  format: "uuid"
                name:
                  type: "string"
                description:
                  type: "string"
        "500":
          description: "Could not obtain a list of all active projects"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    post:
      tags:
      - "Project"
      summary: "Insert a project"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              description:
                type: "string"
              userId:
                type: "string"
                format: "uuid"
      responses:
        "200":
          description: "Inserted a project"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              userId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              description:
                type: "string"
        "500":
          description: "Could not insert a project"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    put:
      tags:
      - "Project"
      summary: " Update project information"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              description:
                type: "string"
              userId:
                type: "string"
                format: "uuid"
      responses:
        "200":
          description: "Sucessfully updated a project"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              userId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              description:
                type: "string"
        "500":
          description: "Could not update a project"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /project/:id:
    get:
      tags:
        - "Project"
      summary: "Get project information"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: id
          required: true
          type: string
          format: "uuid"
      responses:
        "200":
          description: "Obtained a project"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              userId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              description:
                type: "string"
        "500":
          description: "Could not obtain a project"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    delete:
      tags:
        - "Project"
      summary: "Delete project"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: id
          required: true
          type: string
          format: "uuid"
      responses:
        "200":
          description: "Successfully removed a project"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              userId:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              description:
                type: "string"
        "500":
          description: "Could not remove a project"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /offer:
    get:
      tags:
      - "Class Offer"
      summary: "Get a list of all class offers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Obtained a list of all class offers"
          schema:
            type: "array"
            produces: "application/json"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  format: "uuid"
                name:
                  type: "string"
                code:
                  type: "string"
                codeClassroom:
                  type: "string"
                linkClassroom:
                  type: "string"
                linkMeets:
                  type: "string"
                linkWpp:
                  type: "string"
                linkTel:
                  type: "string"
        "500":
          description: "Could not obtain a list of all class offers"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    post:
      tags:
      - "Class Offer"
      summary: "Insert a class offer"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              code:
                type: "string"
              codeClassroom:
                type: "string"
              linkClassroom:
                type: "string"
              linkMeets:
                type: "string"
              linkWpp:
                type: "string"
              linkTel:
                type: "string"
      responses:
        "200":
          description: "Inserted a class offer"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              code:
                type: "string"
              codeClassroom:
                type: "string"
              linkClassroom:
                type: "string"
              linkMeets:
                type: "string"
              linkWpp:
                type: "string"
              linkTel:
                type: "string"
        "500":
          description: "Could not insert a class offer"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    put:
      tags:
      - "Class Offer"
      summary: " Update class offer information"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              code:
                type: "string"
              codeClassroom:
                type: "string"
              linkClassroom:
                type: "string"
              linkMeets:
                type: "string"
              linkWpp:
                type: "string"
              linkTel:
                type: "string"
      responses:
        "200":
          description: "Sucessfully updated a class offer"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              code:
                type: "string"
              codeClassroom:
                type: "string"
              linkClassroom:
                type: "string"
              linkMeets:
                type: "string"
              linkWpp:
                type: "string"
              linkTel:
                type: "string"
        "500":
          description: "Could not update a class offer"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    delete:
      tags:
        - "Class Offer"
      summary: "Delete all class offers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successfully removed all class offers"
          schema:
            type: "array"
            produces: "application/json"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  format: "uuid"
                name:
                  type: "string"
                code:
                  type: "string"
                codeClassroom:
                  type: "string"
                linkClassroom:
                  type: "string"
                linkMeets:
                  type: "string"
                linkWpp:
                  type: "string"
                linkTel:
                  type: "string"
        "500":
          description: "Could not remove all class offers"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /offer/:id:
    get:
      tags:
        - "Class Offer"
      summary: "Get class offer information"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: id
          required: true
          type: string
          format: "uuid"
      responses:
        "200":
          description: "Obtained a class offer"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              code:
                type: "string"
              codeClassroom:
                type: "string"
              linkClassroom:
                type: "string"
              linkMeets:
                type: "string"
              linkWpp:
                type: "string"
              linkTel:
                type: "string"
        "500":
          description: "Could not obtain a class offer"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    delete:
      tags:
        - "Class Offer"
      summary: "Delete class offer"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: id
          required: true
          type: string
          format: "uuid"
      responses:
        "200":
          description: "Successfully removed a class offer"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              name:
                type: "string"
              code:
                type: "string"
              codeClassroom:
                type: "string"
              linkClassroom:
                type: "string"
              linkMeets:
                type: "string"
              linkWpp:
                type: "string"
              linkTel:
                type: "string"
        "500":
          description: "Could not remove a class offer"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /informative:
    get:
      tags:
      - "Informatives"
      summary: "Get a list of all informatives"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Obtained a list of all informatives"
          schema:
            type: "array"
            produces: "application/json"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                  format: "uuid"
                title:
                  type: "string"
                content:
                  type: "string"
        "500":
          description: "Could not obtain a list of all informatives"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    post:
      tags:
      - "Informatives"
      summary: "Insert a informative"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              title:
                type: "string"
              content:
                type: "string"
      responses:
        "200":
          description: "Inserted a informative"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              title:
                type: "string"
              content:
                type: "string"
        "500":
          description: "Could not insert a informative"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    put:
      tags:
      - "Informatives"
      summary: " Update informative information"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              title:
                type: "string"
              content:
                type: "string"
      responses:
        "200":
          description: "Sucessfully updated a informative"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              title:
                type: "string"
              content:
                type: "string"
        "500":
          description: "Could not update a informative"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /informative/:id:
    get:
      tags:
        - "Informatives"
      summary: "Get informative information"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: id
          required: true
          type: string
          format: "uuid"
      responses:
        "200":
          description: "Obtained a informative"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              title:
                type: "string"
              content:
                type: "string"
        "500":
          description: "Could not obtain a informative"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
    delete:
      tags:
        - "Informatives"
      summary: "Delete informative"
      produces:
      - "application/json"
      parameters:
        - in: param
          name: id
          required: true
          type: string
          format: "uuid"
      responses:
        "200":
          description: "Successfully removed a informative"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                format: "uuid"
              title:
                type: "string"
              content:
                type: "string"
        "500":
          description: "Could not remove a informative"
          schema:
            type: "object"
            properties:
              message:
                type: "string"

